class CGradientView : public CColorView
{
	CGradientView();
	virtual ~CGradientView();
	virtual bool init();
	virtual bool initWithColor(const ccColor4B& tStart, const ccColor4B& tEnd);
	virtual bool initWithColor(const ccColor4B& tStart, const ccColor4B& tEnd, const CCPoint& v);
	static CGradientView* create();
	static CGradientView* create(const ccColor4B& tStart, const ccColor4B& tEnd);
	static CGradientView* create(const ccColor4B& tStart, const ccColor4B& tEnd, const CCPoint& v);

	virtual void setStartColor(const ccColor3B& tColor);
	virtual const ccColor3B& getStartColor();
	virtual void setEndColor(const ccColor3B& tColor);
	virtual const ccColor3B& getEndColor();
	virtual void setStartOpacity(GLubyte cOpacity);
	virtual GLubyte getStartOpacity();
	virtual void setEndOpacity(GLubyte cOpacity);
	virtual GLubyte getEndOpacity();
	virtual void setVector(const CCPoint& tPoint);
	virtual const CCPoint& getVector();
	virtual void setCompressedInterpolation(bool bCompressedInterpolation);
	virtual bool isCompressedInterpolation();
};